const translations = {
    uk: {
        // –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞ –æ—Å–Ω–æ–≤–Ω—ñ —Ç–µ–∫—Å—Ç–∏
        "game_title": "–ì—Ä–∞ \"–°–∫—Ä–∏–Ω—å–∫–∏\"",
        "languageLabel": "–ú–æ–≤–∞:",
        "lobby_prompt": "–í–∏–±–µ—Ä—ñ—Ç—å —ñ–º'—è —Ç–∞ –∫—ñ–º–Ω–∞—Ç—É –¥–ª—è –≥—Ä–∏.",
        "placeholder_name": "–í–∞—à–µ —ñ–º'—è",
        "placeholder_room_id": "ID –∫—ñ–º–Ω–∞—Ç–∏",
        "join_button": "–ü—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è / –°—Ç–≤–æ—Ä–∏—Ç–∏ –∫—ñ–º–Ω–∞—Ç—É",
        "status_waiting_for_players": "–û—á—ñ–∫—É–≤–∞–Ω–Ω—è –Ω–∞ –≥—Ä–∞–≤—Ü—ñ–≤...",
        
        // –Ü–≥—Ä–æ–≤—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        "your_turn_prompt": "–í–∞—à —Ö—ñ–¥, {playerName}! –í–∏–±–µ—Ä—ñ—Ç—å –≥—Ä–∞–≤—Ü—è —Ç–∞ –∫–∞—Ä—Ç—É –¥–ª—è –∑–∞–ø–∏—Ç—É.",
        "select_value": "–í–∏–±—Ä–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è",
        "ask_button": "–ó–∞–ø–∏—Ç–∞—Ç–∏",
        "guess_count_prompt": "–í–≥–∞–¥–∞–π—Ç–µ, —Å–∫—ñ–ª—å–∫–∏ –∫–∞—Ä—Ç –∑ —Ü–∏–º —Ä–∞–Ω–≥–æ–º —î —É –≤–∞—à–æ–≥–æ —Å—É–ø–µ—Ä–Ω–∏–∫–∞?",
        "submit_guess_button": "–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏",
        "guess_suits_prompt": "–°–∫—ñ–ª—å–∫–∏ –º–∞—Å—Ç–µ–π –≤–∏ –≤–≥–∞–¥–∞—î—Ç–µ?",
        "guess_suits_button": "–í–≥–∞–¥–∞—Ç–∏ –º–∞—Å—Ç—ñ",
        "response_prompt": "–ì—Ä–∞–≤–µ—Ü—å {askingPlayer} –∑–∞–ø–∏—Ç—É—î –∫–∞—Ä—Ç—É {cardRank}. –£ –≤–∞—Å –≤–æ–Ω–∞ —î?",
        "yes_button": "–¢–∞–∫",
        "no_button": "–ù—ñ",
        
        // –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≥—Ä–∏
        "start_game_button": "–†–æ–∑–ø–æ—á–∞—Ç–∏ –≥—Ä—É",
        "your_cards": "–í–∞—à—ñ –∫–∞—Ä—Ç–∏:",
        "collected_boxes": "–ó—ñ–±—Ä–∞–Ω—ñ —Å–∫—Ä–∏–Ω—å–∫–∏:",
        "deck": "–ö–æ–ª–æ–¥–∞:",
        "cards_unit": "–∫–∞—Ä—Ç",
        "players": "–ì—Ä–∞–≤—Ü—ñ:",
        "game_log_title": "–ñ—É—Ä–Ω–∞–ª –≥—Ä–∏:",
        
        // –î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–µ—Ä–µ–∫–ª–∞–¥–∏
        "status_turn": "–•–æ–¥–∏—Ç—å",
        "status_waiting": "–û—á—ñ–∫—É—î",
        "status_game_started": "–ì—Ä–∞ —Ä–æ–∑–ø–æ—á–∞–ª–∞—Å—å! –•—ñ–¥ –≥—Ä–∞–≤—Ü—è: {playerName}",
        "status_waiting_for_players_count": "–û—á—ñ–∫—É–≤–∞–Ω–Ω—è –Ω–∞ –≥—Ä–∞–≤—Ü—ñ–≤... (–í—Å—å–æ–≥–æ {count}/{max})",
		"error_enter_name_and_room": "–ë—É–¥—å—Ç–µ –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —ñ–º'—è —Ç–∞ ID –∫—ñ–º–Ω–∞—Ç–∏.",
		"error_select_player_and_card": "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–±–µ—Ä—ñ—Ç—å –≥—Ä–∞–≤—Ü—è —Ç–∞ –∑–Ω–∞—á–µ–Ω–Ω—è –∫–∞—Ä—Ç–∏.",
        "error_select_suits": "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–±–µ—Ä—ñ—Ç—å –º–∞—Å—Ç—ñ.",
        "error_select_count": "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–±–µ—Ä—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å.",
        "game_over_winner": "üèÜ –ì—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ü–µ—Ä–µ–º–æ–∂–µ—Ü—å: {winner}.",
        "boxes_unit": "—Å–∫—Ä–∏–Ω—å–æ–∫",
        "game_over_message": "üèÜ {message}",
        "game_results": "–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –≥—Ä–∏",
        "reload_for_new_game": "–î–ª—è –Ω–æ–≤–æ—ó –≥—Ä–∏ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –±–æ—Ç —Ç–∞ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–π—Ç–µ—Å—è –∑–∞–Ω–æ–≤–æ",
		//
		"default_player": "–ì—Ä–∞–≤–µ—Ü—å",
        "anonymous_player": "–ê–Ω–æ–Ω—ñ–º–Ω–∏–π –≥—Ä–∞–≤–µ—Ü—å",
        "test_player": "–¢–µ—Å—Ç–æ–≤–∏–π –≥—Ä–∞–≤–µ—Ü—å",
        "connected_to_server": "–ü—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ —Å–µ—Ä–≤–µ—Ä–∞. –ù–∞–¥—Å–∏–ª–∞—î–º–æ —ñ–º'—è –≥—Ä–∞–≤—Ü—è —Ç–∞ ID –∫—ñ–º–Ω–∞—Ç–∏...",
        "joined_room_success": "–ü—Ä–∏—î–¥–Ω–∞–Ω–æ –¥–æ –∫—ñ–º–Ω–∞—Ç–∏: {roomId}",
        "game_started": "–ì—Ä–∞ —Ä–æ–∑–ø–æ—á–∞–ª–∞—Å—å!",
        "disconnected_from_server": "–í—ñ–¥–∫–ª—é—á–µ–Ω–æ –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞. –°–ø—Ä–æ–±–∞ –ø–µ—Ä–µ–ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...",
        "websocket_error": "–ü–æ–º–∏–ª–∫–∞ WebSocket: {error}",
        "error_message": "–ü–æ–º–∏–ª–∫–∞: {message}",
		//
		//
		// server localisation:
		"player_joined": "–ì—Ä–∞–≤–µ—Ü—å {player} –ø—Ä–∏—î–¥–Ω–∞–≤—Å—è –¥–æ –≥—Ä–∏.",
        "player_left": "–ì—Ä–∞–≤–µ—Ü—å {player} –≤—ñ–¥–∫–ª—é—á–∏–≤—Å—è.",
        "game_started": "–ì—Ä–∞ —Ä–æ–∑–ø–æ—á–∞–ª–∞—Å—å! –ü–µ—Ä—à–∏–π —Ö—ñ–¥ –∑–∞ {player}",
        "ask_card": "–ì—Ä–∞–≤–µ—Ü—å {asking_player} –∑–∞–ø–∏—Ç—É—î —É {target_player}, —á–∏ –º–∞—î —Ç–æ–π –∫–∞—Ä—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è {card_rank}?",
        "response_yes": "–ì—Ä–∞–≤–µ—Ü—å {player} –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î '–¢–∞–∫'.",
        "response_no": "–ì—Ä–∞–≤–µ—Ü—å {player} –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î '–ù—ñ'. {asking_player} —ñ–¥–µ –Ω–∞ —Ä–∏–±–∞–ª–∫—É.",
        "guess_count_prompt": "–ì—Ä–∞–≤–µ—Ü—å {player} –º–∞—î –≤–≥–∞–¥–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–∞—Ä—Ç {card_rank}.",
        "guess_count_attempt": "–ì—Ä–∞–≤–µ—Ü—å {player} –≥–∞–¥–∞—î, —â–æ —É –≥—Ä–∞–≤—Ü—è {target_player} {count} –∫–∞—Ä—Ç —Ä–∞–Ω–≥—É {card_rank}.",
        "guess_count_success": "–ì—Ä–∞–≤–µ—Ü—å {player} –≤–≥–∞–¥–∞–≤ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–∞—Ä—Ç —Ä–∞–Ω–≥—É {card_rank}: {count}. –í—ñ–Ω –ø—Ä–æ–¥–æ–≤–∂—É—î –≤–≥–∞–¥—É–≤–∞—Ç–∏ –º–∞—Å—Ç—ñ.",
        "guess_count_fail": "–ì—Ä–∞–≤–µ—Ü—å {player} –Ω–µ –≤–≥–∞–¥–∞–≤ –∫—ñ–ª—å–∫—ñ—Å—Ç—å. –í—ñ–Ω –±–µ—Ä–µ –∫–∞—Ä—Ç—É –∑ –∫–æ–ª–æ–¥–∏.",
        "guess_suits_success": "–ì—Ä–∞–≤–µ—Ü—å {player} –≤–≥–∞–¥–∞–≤ –º–∞—Å—Ç—ñ {suits} —ñ –æ—Ç—Ä–∏–º—É—î –∫–∞—Ä—Ç–∏ –≤—ñ–¥ –≥—Ä–∞–≤—Ü—è {target_player}.",
        "guess_suits_fail": "–ì—Ä–∞–≤–µ—Ü—å {player} –Ω–∞–∑–≤–∞–≤ –º–∞—Å—Ç—ñ {suits}, –∞–ª–µ –Ω–µ –≤–≥–∞–¥–∞–≤ —ñ –±–µ—Ä–µ –∫–∞—Ä—Ç—É –∑ –∫–æ–ª–æ–¥–∏.",
        "draw_card": "–ì—Ä–∞–≤–µ—Ü—å {player} –±–µ—Ä–µ –∫–∞—Ä—Ç—É –∑ –∫–æ–ª–æ–¥–∏.",
        "empty_hand_draw": "–£ –≥—Ä–∞–≤—Ü—è {player} –ø–æ—Ä–æ–∂–Ω—è —Ä—É–∫–∞. –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤–∑—è—Ç–æ –∫–∞—Ä—Ç—É –∑ –∫–æ–ª–æ–¥–∏.",
        "empty_hand_after_set": "–£ –≥—Ä–∞–≤—Ü—è {player} –ø–æ—Ä–æ–∂–Ω—è —Ä—É–∫–∞ –ø—ñ—Å–ª—è –∑–±–æ—Ä—É —Å–∫—Ä–∏–Ω—å–∫–∏. –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –±–µ—Ä–µ —â–µ –æ–¥–Ω—É –∫–∞—Ä—Ç—É.",
        "set_collected": "–ì—Ä–∞–≤–µ—Ü—å {player} –∑—ñ–±—Ä–∞–≤ —Å–∫—Ä–∏–Ω—å–∫—É {rank}!",
        "set_collected_initial": "–ì—Ä–∞–≤–µ—Ü—å {player} –∑—ñ–±—Ä–∞–≤ —Å–∫—Ä–∏–Ω—å–∫—É –ø—ñ–¥ —á–∞—Å —Ä–æ–∑–¥–∞—á—ñ!",
        "next_turn": "–•—ñ–¥ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –¥–æ –≥—Ä–∞–≤—Ü—è {player}.",
        "continue_turn": "–ì—Ä–∞–≤–µ—Ü—å {player} –ø—Ä–æ–¥–æ–≤–∂—É—î —Å–≤—ñ–π —Ö—ñ–¥.",
        "room_full": "–ö—ñ–º–Ω–∞—Ç–∞ –∑–∞–ø–æ–≤–Ω–µ–Ω–∞.",
        "player_exists": "–ì—Ä–∞–≤–µ—Ü—å –∑ —Ç–∞–∫–∏–º —ñ–º'—è–º –≤–∂–µ —î –≤ –∫—ñ–º–Ω–∞—Ç—ñ.",
        "game_already_started": "–ì—Ä–∞ –≤–∂–µ —Ä–æ–∑–ø–æ—á–∞–ª–∞—Å—å.",
        "not_enough_players": "–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –≥—Ä–∞–≤—Ü—ñ–≤.",
        "game_over_win": "–ì—Ä–∞ –∑–∞–∫—ñ–Ω—á–µ–Ω–∞! –ü–µ—Ä–µ–º–æ–∂–µ—Ü—å: {winner}.",
        "game_over_tie": "–ì—Ä–∞ –∑–∞–∫—ñ–Ω—á–µ–Ω–∞! –°–µ—Ä–µ–¥ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤ - –Ω—ñ—á–∏—è! –ù–∞–π–±—ñ–ª—å—à–µ —Å–∫—Ä–∏–Ω—å–æ–∫ –Ω–∞–±—Ä–∞–ª–∏: {winners}.",
        "game_over_full_tie": "–ì—Ä–∞ –∑–∞–∫—ñ–Ω—á–µ–Ω–∞! –ü–æ–≤–Ω–∞ –Ω—ñ—á–∏—è! –í—Å—ñ –≥—Ä–∞–≤—Ü—ñ –Ω–∞–±—Ä–∞–ª–∏ –ø–æ {score} —Å–∫—Ä–∏–Ω—å–æ–∫."
    },
    en: {
        "game_title": "Boxes Game",
        "languageLabel": "Language:",
        "lobby_prompt": "Choose a name and room to play.",
        "placeholder_name": "Your name",
        "placeholder_room_id": "Room ID",
        "join_button": "Join / Create Room",
        "status_waiting_for_players": "Waiting for players...",
        
        "your_turn_prompt": "Your turn, {playerName}! Choose a player and card to ask for.",
        "select_value": "Select value",
        "ask_button": "Ask",
        "guess_count_prompt": "Guess how many cards of this rank your opponent has?",
        "submit_guess_button": "Submit",
        "guess_suits_prompt": "How many suits will you guess?",
        "guess_suits_button": "Guess Suits",
        "response_prompt": "Player {askingPlayer} is asking for card {cardRank}. Do you have it?",
        "yes_button": "Yes",
        "no_button": "No",
        
        "start_game_button": "Start Game",
        "your_cards": "Your cards:",
        "collected_boxes": "Collected boxes:",
        "deck": "Deck:",
        "cards_unit": "cards",
        "players": "Players:",
        "game_log_title": "Game Log:",
        
        // –î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–µ—Ä–µ–∫–ª–∞–¥–∏
        "status_turn": "Turn",
        "status_waiting": "Waiting",
        "status_game_started": "Game started! Turn of player: {playerName}",
        "status_waiting_for_players_count": "Waiting for players... (Total {count}/{max})",
		"error_enter_name_and_room": "Please enter your name and room ID.",
		"error_select_player_and_card": "Please select a player and card value.",
        "error_select_suits": "Please select suits.",
        "error_select_count": "Please select a count.",
        "game_over_winner": "üèÜ Game over! Winner: {winner}.",
        "boxes_unit": "boxes",
        "game_over_message": "üèÜ {message}",
        "game_results": "Game results",
        "reload_for_new_game": "For a new game, reload the bot and register again",
		//
		"default_player": "Player",
        "anonymous_player": "Anonymous player",
        "test_player": "Test player",
        "connected_to_server": "Connected to server. Sending player name and room ID...",
        "joined_room_success": "Joined room: {roomId}",
        "game_started": "Game started!",
        "disconnected_from_server": "Disconnected from server. Attempting to reconnect in 5 seconds...",
        "websocket_error": "WebSocket error: {error}",
        "error_message": "Error: {message}",
		//
		//
		//
		"player_joined": "Player {player} joined the game.",
        "player_left": "Player {player} disconnected.",
        "game_started": "Game started! First turn goes to {player}",
        "ask_card": "Player {asking_player} asks {target_player} if they have cards of rank {card_rank}?",
        "response_yes": "Player {player} answers 'Yes'.",
        "response_no": "Player {player} answers 'No'. {asking_player} goes fishing.",
        "guess_count_prompt": "Player {player} must guess the number of {card_rank} cards.",
        "guess_count_attempt": "Player {player} guesses that {target_player} has {count} cards of rank {card_rank}.",
        "guess_count_success": "Player {player} guessed the number of {card_rank} cards correctly: {count}. They continue to guess suits.",
        "guess_count_fail": "Player {player} failed to guess the number. They draw a card from the deck.",
        "guess_suits_success": "Player {player} guessed the suits {suits} correctly and receives cards from {target_player}.",
        "guess_suits_fail": "Player {player} named suits {suits} but guessed incorrectly and draws a card from the deck.",
        "draw_card": "Player {player} draws a card from the deck.",
        "empty_hand_draw": "Player {player} has an empty hand. Automatically drew a card from the deck.",
        "empty_hand_after_set": "Player {player} has an empty hand after collecting a set. Automatically draws another card.",
        "set_collected": "Player {player} collected a {rank} set!",
        "set_collected_initial": "Player {player} collected a set during the deal!",
        "next_turn": "Turn passes to player {player}.",
        "continue_turn": "Player {player} continues their turn.",
        "room_full": "Room is full.",
        "player_exists": "A player with this name already exists in the room.",
        "game_already_started": "Game has already started.",
        "not_enough_players": "Not enough players.",
        "game_over_win": "Game over! Winner: {winner}.",
        "game_over_tie": "Game over! Tie among winners! Most boxes collected by: {winners}.",
        "game_over_full_tie": "Game over! Complete tie! All players collected {score} boxes each."
    },
    ru: {
        "game_title": "–ò–≥—Ä–∞ \"–°—É–Ω–¥—É—á–∫–∏\"",
        "languageLabel": "–Ø–∑—ã–∫:",
        "lobby_prompt": "–í—ã–±–µ—Ä–∏—Ç–µ –∏–º—è –∏ –∫–æ–º–Ω–∞—Ç—É –¥–ª—è –∏–≥—Ä—ã.",
        "placeholder_name": "–í–∞—à–µ –∏–º—è",
        "placeholder_room_id": "ID –∫–æ–º–Ω–∞—Ç—ã",
        "join_button": "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è / –°–æ–∑–¥–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É",
        "status_waiting_for_players": "–û–∂–∏–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–æ–≤...",
        
        "your_turn_prompt": "–í–∞—à —Ö–æ–¥, {playerName}! –í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä–æ–∫–∞ –∏ –∫–∞—Ä—Ç—É –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞.",
        "select_value": "–í—ã–±—Ä–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ",
        "ask_button": "–°–ø—Ä–æ—Å–∏—Ç—å",
        "guess_count_prompt": "–£–≥–∞–¥–∞–π—Ç–µ, —Å–∫–æ–ª—å–∫–æ –∫–∞—Ä—Ç —ç—Ç–æ–≥–æ —Ä–∞–Ω–≥–∞ —É –≤–∞—à–µ–≥–æ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞?",
        "submit_guess_button": "–û—Ç–ø—Ä–∞–≤–∏—Ç—å",
        "guess_suits_prompt": "–°–∫–æ–ª—å–∫–æ –º–∞—Å—Ç–µ–π –≤—ã —É–≥–∞–¥–∞–µ—Ç–µ?",
        "guess_suits_button": "–£–≥–∞–¥–∞—Ç—å –º–∞—Å—Ç–∏",
        "response_prompt": "–ò–≥—Ä–æ–∫ {askingPlayer} —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∫–∞—Ä—Ç—É {cardRank}. –£ –≤–∞—Å –æ–Ω–∞ –µ—Å—Ç—å?",
        "yes_button": "–î–∞",
        "no_button": "–ù–µ—Ç",
        
        "start_game_button": "–ù–∞—á–∞—Ç—å –∏–≥—Ä—É",
        "your_cards": "–í–∞—à–∏ –∫–∞—Ä—Ç—ã:",
        "collected_boxes": "–°–æ–±—Ä–∞–Ω–Ω—ã–µ —Å—É–Ω–¥—É—á–∫–∏:",
        "deck": "–ö–æ–ª–æ–¥–∞:",
        "cards_unit": "–∫–∞—Ä—Ç",
        "players": "–ò–≥—Ä–æ–∫–∏:",
        "game_log_title": "–ñ—É—Ä–Ω–∞–ª –∏–≥—Ä—ã:",
        
        // –î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–µ—Ä–µ–∫–ª–∞–¥–∏
        "status_turn": "–•–æ–¥–∏—Ç",
        "status_waiting": "–û–∂–∏–¥–∞–µ—Ç",
        "status_game_started": "–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! –•–æ–¥ –∏–≥—Ä–æ–∫–∞: {playerName}",
        "status_waiting_for_players_count": "–û–∂–∏–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–æ–≤... (–í—Å–µ–≥–æ {count}/{max})",
		"error_enter_name_and_room": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∏–º—è –∏ ID –∫–æ–º–Ω–∞—Ç—ã.",
		"error_select_player_and_card": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä–æ–∫–∞ –∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã.",
        "error_select_suits": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –º–∞—Å—Ç–∏.",
        "error_select_count": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ.",
        "game_over_winner": "üèÜ –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ü–æ–±–µ–¥–∏—Ç–µ–ª—å: {winner}.",
        "boxes_unit": "—Å—É–Ω–¥—É—á–∫–æ–≤",
        "game_over_message": "üèÜ {message}",
        "game_results": "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–≥—Ä—ã",
        "reload_for_new_game": "–î–ª—è –Ω–æ–≤–æ–π –∏–≥—Ä—ã –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –±–æ—Ç –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∑–∞–Ω–æ–≤–æ",
		//
		"default_player": "–ò–≥—Ä–æ–∫",
        "anonymous_player": "–ê–Ω–æ–Ω–∏–º–Ω—ã–π –∏–≥—Ä–æ–∫",
        "test_player": "–¢–µ—Å—Ç–æ–≤—ã–π –∏–≥—Ä–æ–∫",
        "connected_to_server": "–ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ —Å–µ—Ä–≤–µ—Ä—É. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–º—è –∏–≥—Ä–æ–∫–∞ –∏ ID –∫–æ–º–Ω–∞—Ç—ã...",
        "joined_room_success": "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–æ –∫ –∫–æ–º–Ω–∞—Ç–µ: {roomId}",
        "game_started": "–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å!",
        "disconnected_from_server": "–û—Ç–∫–ª—é—á–µ–Ω–æ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...",
        "websocket_error": "–û—à–∏–±–∫–∞ WebSocket: {error}",
        "error_message": "–û—à–∏–±–∫–∞: {message}",
		//
		//
		//
		"player_joined": "–ò–≥—Ä–æ–∫ {player} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∏–≥—Ä–µ.",
        "player_left": "–ò–≥—Ä–æ–∫ {player} –æ—Ç–∫–ª—é—á–∏–ª—Å—è.",
        "game_started": "–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! –ü–µ—Ä–≤—ã–π —Ö–æ–¥ –∑–∞ {player}",
        "ask_card": "–ò–≥—Ä–æ–∫ {asking_player} —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç {target_player}, –µ—Å—Ç—å –ª–∏ —É —Ç–æ–≥–æ –∫–∞—Ä—Ç—ã –∑–Ω–∞—á–µ–Ω–∏—è {card_rank}?",
        "response_yes": "–ò–≥—Ä–æ–∫ {player} –æ—Ç–≤–µ—á–∞–µ—Ç '–î–∞'.",
        "response_no": "–ò–≥—Ä–æ–∫ {player} –æ—Ç–≤–µ—á–∞–µ—Ç '–ù–µ—Ç'. {asking_player} –∏–¥–µ—Ç –Ω–∞ —Ä—ã–±–∞–ª–∫—É.",
        "guess_count_prompt": "–ò–≥—Ä–æ–∫ {player} –¥–æ–ª–∂–µ–Ω —É–≥–∞–¥–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç {card_rank}.",
        "guess_count_attempt": "–ò–≥—Ä–æ–∫ {player} –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç, —á—Ç–æ —É –∏–≥—Ä–æ–∫–∞ {target_player} {count} –∫–∞—Ä—Ç —Ä–∞–Ω–≥–∞ {card_rank}.",
        "guess_count_success": "–ò–≥—Ä–æ–∫ {player} —É–≥–∞–¥–∞–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç —Ä–∞–Ω–≥–∞ {card_rank}: {count}. –û–Ω –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —É–≥–∞–¥—ã–≤–∞—Ç—å –º–∞—Å—Ç–∏.",
        "guess_count_fail": "–ò–≥—Ä–æ–∫ {player} –Ω–µ —É–≥–∞–¥–∞–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ. –û–Ω –±–µ—Ä–µ—Ç –∫–∞—Ä—Ç—É –∏–∑ –∫–æ–ª–æ–¥—ã.",
        "guess_suits_success": "–ò–≥—Ä–æ–∫ {player} —É–≥–∞–¥–∞–ª –º–∞—Å—Ç–∏ {suits} –∏ –ø–æ–ª—É—á–∞–µ—Ç –∫–∞—Ä—Ç—ã –æ—Ç –∏–≥—Ä–æ–∫–∞ {target_player}.",
        "guess_suits_fail": "–ò–≥—Ä–æ–∫ {player} –Ω–∞–∑–≤–∞–ª –º–∞—Å—Ç–∏ {suits}, –Ω–æ –Ω–µ —É–≥–∞–¥–∞–ª –∏ –±–µ—Ä–µ—Ç –∫–∞—Ä—Ç—É –∏–∑ –∫–æ–ª–æ–¥—ã.",
        "draw_card": "–ò–≥—Ä–æ–∫ {player} –±–µ—Ä–µ—Ç –∫–∞—Ä—Ç—É –∏–∑ –∫–æ–ª–æ–¥—ã.",
        "empty_hand_draw": "–£ –∏–≥—Ä–æ–∫–∞ {player} –ø—É—Å—Ç–∞—è —Ä—É–∫–∞. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–∑—è—Ç–∞ –∫–∞—Ä—Ç–∞ –∏–∑ –∫–æ–ª–æ–¥—ã.",
        "empty_hand_after_set": "–£ –∏–≥—Ä–æ–∫–∞ {player} –ø—É—Å—Ç–∞—è —Ä—É–∫–∞ –ø–æ—Å–ª–µ —Å–±–æ—Ä–∞ —Å—É–Ω–¥—É—á–∫–∞. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –±–µ—Ä–µ—Ç –µ—â–µ –æ–¥–Ω—É –∫–∞—Ä—Ç—É.",
        "set_collected": "–ò–≥—Ä–æ–∫ {player} —Å–æ–±—Ä–∞–ª —Å—É–Ω–¥—É—á–æ–∫ {rank}!",
        "set_collected_initial": "–ò–≥—Ä–æ–∫ {player} —Å–æ–±—Ä–∞–ª —Å—É–Ω–¥—É—á–æ–∫ –≤–æ –≤—Ä–µ–º—è —Ä–∞–∑–¥–∞—á–∏!",
        "next_turn": "–•–æ–¥ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ –∏–≥—Ä–æ–∫—É {player}.",
        "continue_turn": "–ò–≥—Ä–æ–∫ {player} –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Å–≤–æ–π —Ö–æ–¥.",
        "room_full": "–ö–æ–º–Ω–∞—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞.",
        "player_exists": "–ò–≥—Ä–æ–∫ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ –µ—Å—Ç—å –≤ –∫–æ–º–Ω–∞—Ç–µ.",
        "game_already_started": "–ò–≥—Ä–∞ —É–∂–µ –Ω–∞—á–∞–ª–∞—Å—å.",
        "not_enough_players": "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–≥—Ä–æ–∫–æ–≤.",
        "game_over_win": "–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –ü–æ–±–µ–¥–∏—Ç–µ–ª—å: {winner}.",
        "game_over_tie": "–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –ù–∏—á—å—è —Å—Ä–µ–¥–∏ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π! –ë–æ–ª—å—à–µ –≤—Å–µ–≥–æ —Å—É–Ω–¥—É—á–∫–æ–≤ —Å–æ–±—Ä–∞–ª–∏: {winners}.",
        "game_over_full_tie": "–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –ü–æ–ª–Ω–∞—è –Ω–∏—á—å—è! –í—Å–µ –∏–≥—Ä–æ–∫–∏ —Å–æ–±—Ä–∞–ª–∏ –ø–æ {score} —Å—É–Ω–¥—É—á–∫–æ–≤."
    },
    de: {
        "game_title": "Spiel \"K√§stchen\"",
        "languageLabel": "Sprache:",
        "lobby_prompt": "W√§hlen Sie einen Namen und einen Raum zum Spielen.",
        "placeholder_name": "Ihr Name",
        "placeholder_room_id": "Raum-ID",
        "join_button": "Beitreten / Raum erstellen",
        "status_waiting_for_players": "Warten auf Spieler...",
        
        "your_turn_prompt": "Sie sind dran, {playerName}! W√§hlen Sie einen Spieler und eine Karte zum Fragen.",
        "select_value": "Wert ausw√§hlen",
        "ask_button": "Fragen",
        "guess_count_prompt": "Raten Sie, wie viele Karten dieses Rangs Ihr Gegner hat?",
        "submit_guess_button": "Senden",
        "guess_suits_prompt": "Wie viele Farben werden Sie erraten?",
        "guess_suits_button": "Farben erraten",
        "response_prompt": "Spieler {askingPlayer} fragt nach Karte {cardRank}. Haben Sie sie?",
        "yes_button": "Ja",
        "no_button": "Nein",
        
        "start_game_button": "Spiel starten",
        "your_cards": "Ihre Karten:",
        "collected_boxes": "Gesammelte K√§stchen:",
        "deck": "Stapel:",
        "cards_unit": "Karten",
        "players": "Spieler:",
        "game_log_title": "Spielprotokoll:",
        
        // –î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–µ—Ä–µ–∫–ª–∞–¥–∏
        "status_turn": "Am Zug",
        "status_waiting": "Wartet",
        "status_game_started": "Spiel gestartet! Zug von Spieler: {playerName}",
        "status_waiting_for_players_count": "Warten auf Spieler... (Insgesamt {count}/{max})",
		"error_enter_name_and_room": "Bitte geben Sie Ihren Namen und die Raum-ID ein.",
		"error_select_player_and_card": "Bitte w√§hlen Sie einen Spieler und einen Kartenwert.",
        "error_select_suits": "Bitte w√§hlen Sie Farben aus.",
        "error_select_count": "Bitte w√§hlen Sie eine Anzahl aus.",
        "game_over_winner": "üèÜ Spiel vorbei! Gewinner: {winner}.",
        "boxes_unit": "K√§stchen",
        "game_over_message": "üèÜ {message}",
        "game_results": "Spielergebnisse",
        "reload_for_new_game": "F√ºr ein neues Spiel laden Sie den Bot neu und registrieren sich erneut",
		//
		"default_player": "Spieler",
        "anonymous_player": "Anonymer Spieler",
        "test_player": "Testspieler",
        "connected_to_server": "Mit Server verbunden. Sende Spielernamen und Raum-ID...",
        "joined_room_success": "Raum beigetreten: {roomId}",
        "game_started": "Spiel gestartet!",
        "disconnected_from_server": "Vom Server getrennt. Versuche in 5 Sekunden erneut zu verbinden...",
        "websocket_error": "WebSocket-Fehler: {error}",
        "error_message": "Fehler: {message}",
		//
		//
		//
		"player_joined": "Spieler {player} ist dem Spiel beigetreten.",
        "player_left": "Spieler {player} hat die Verbindung getrennt.",
        "game_started": "Spiel gestartet! Erster Zug geht an {player}",
        "ask_card": "Spieler {asking_player} fragt {target_player}, ob sie Karten des Rangs {card_rank} haben?",
        "response_yes": "Spieler {player} antwortet 'Ja'.",
        "response_no": "Spieler {player} antwortet 'Nein'. {asking_player} geht angeln.",
        "guess_count_prompt": "Spieler {player} muss die Anzahl der {card_rank} Karten erraten.",
        "guess_count_attempt": "Spieler {player} sch√§tzt, dass {target_player} {count} Karten des Rangs {card_rank} hat.",
        "guess_count_success": "Spieler {player} hat die Anzahl der {card_rank} Karten richtig erraten: {count}. Sie raten weiter die Farben.",
        "guess_count_fail": "Spieler {player} hat die Anzahl nicht erraten. Sie ziehen eine Karte vom Stapel.",
        "guess_suits_success": "Spieler {player} hat die Farben {suits} richtig erraten und erh√§lt Karten von {target_player}.",
        "guess_suits_fail": "Spieler {player} nannte Farben {suits}, aber hat falsch geraten und zieht eine Karte vom Stapel.",
        "draw_card": "Spieler {player} zieht eine Karte vom Stapel.",
        "empty_hand_draw": "Spieler {player} hat eine leere Hand. Automatisch eine Karte vom Stapel gezogen.",
        "empty_hand_after_set": "Spieler {player} hat eine leere Hand nach dem Sammeln eines Sets. Zieht automatisch eine weitere Karte.",
        "set_collected": "Spieler {player} hat ein {rank} Set gesammelt!",
        "set_collected_initial": "Spieler {player} hat w√§hrend des Gebens ein Set gesammelt!",
        "next_turn": "Zug geht an Spieler {player}.",
        "continue_turn": "Spieler {player} setzt seinen Zug fort.",
        "room_full": "Raum ist voll.",
        "player_exists": "Ein Spieler mit diesem Namen existiert bereits im Raum.",
        "game_already_started": "Spiel hat bereits begonnen.",
        "not_enough_players": "Nicht genug Spieler.",
        "game_over_win": "Spiel vorbei! Gewinner: {winner}.",
        "game_over_tie": "Spiel vorbei! Unentschieden unter den Gewinnern! Die meisten K√§stchen gesammelt von: {winners}.",
        "game_over_full_tie": "Spiel vorbei! Vollst√§ndiges Unentschieden! Alle Spieler haben jeweils {score} K√§stchen gesammelt."
    },
    es: {
        "game_title": "Juego \"Cajas\"",
        "languageLabel": "Idioma:",
        "lobby_prompt": "Elija un nombre y una sala para jugar.",
        "placeholder_name": "Su nombre",
        "placeholder_room_id": "ID de sala",
        "join_button": "Unirse / Crear sala",
        "status_waiting_for_players": "Esperando jugadores...",
        
        "your_turn_prompt": "¬°Su turno, {playerName}! Elija un jugador y una carta para preguntar.",
        "select_value": "Seleccionar valor",
        "ask_button": "Preguntar",
        "guess_count_prompt": "¬øAdivina cu√°ntas cartas de este rango tiene su oponente?",
        "submit_guess_button": "Enviar",
        "guess_suits_prompt": "¬øCu√°ntos palos adivinar√°?",
        "guess_suits_button": "Adivinar palos",
        "response_prompt": "El jugador {askingPlayer} pregunta por la carta {cardRank}. ¬øLa tienes?",
        "yes_button": "S√≠",
        "no_button": "No",
        
        "start_game_button": "Comenzar juego",
        "your_cards": "Sus cartas:",
        "collected_boxes": "Cajas recolectadas:",
        "deck": "Mazo:",
        "cards_unit": "cartas",
        "players": "Jugadores:",
        "game_log_title": "Registro del juego:",
        
        // –î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–µ—Ä–µ–∫–ª–∞–¥–∏
        "status_turn": "Turno",
        "status_waiting": "Esperando",
        "status_game_started": "¬°Juego comenzado! Turno del jugador: {playerName}",
        "status_waiting_for_players_count": "Esperando jugadores... (Total {count}/{max})",
		//
		"error_enter_name_and_room": "Por favor, ingrese su nombre y ID de sala.",
		"error_select_player_and_card": "Por favor, seleccione un jugador y un valor de carta.",
        "error_select_suits": "Por favor, seleccione palos.",
        "error_select_count": "Por favor, seleccione una cantidad.",
        "game_over_winner": "üèÜ ¬°Juego terminado! Ganador: {winner}.",
        "boxes_unit": "cajas",
        "game_over_message": "üèÜ {message}",
        "game_results": "Resultados del juego",
        "reload_for_new_game": "Para un nuevo juego, recargue el bot y reg√≠strese nuevamente",
		//
		"default_player": "Jugador",
        "anonymous_player": "Jugador an√≥nimo",
        "test_player": "Jugador de prueba",
        "connected_to_server": "Conectado al servidor. Enviando nombre del jugador e ID de la sala...",
        "joined_room_success": "Unido a la sala: {roomId}",
        "game_started": "¬°Juego comenzado!",
        "disconnected_from_server": "Desconectado del servidor. Intentando reconectar en 5 segundos...",
        "websocket_error": "Error de WebSocket: {error}",
        "error_message": "Error: {message}",
		//
		//
		//
		"player_joined": "Jugador {player} se uni√≥ al juego.",
        "player_left": "Jugador {player} se desconect√≥.",
        "game_started": "¬°Juego comenzado! Primer turno para {player}",
        "ask_card": "¬øEl jugador {asking_player} pregunta a {target_player} si tiene cartas de rango {card_rank}?",
        "response_yes": "El jugador {player} responde 'S√≠'.",
        "response_no": "El jugador {player} responde 'No'. {asking_player} va a pescar.",
        "guess_count_prompt": "El jugador {player} debe adivinar el n√∫mero de cartas {card_rank}.",
        "guess_count_attempt": "El jugador {player} supone que {target_player} tiene {count} cartas de rango {card_rank}.",
        "guess_count_success": "El jugador {player} adivin√≥ correctamente el n√∫mero de cartas {card_rank}: {count}. Contin√∫a adivinando palos.",
        "guess_count_fail": "El jugador {player} no adivin√≥ el n√∫mero. Toma una carta del mazo.",
        "guess_suits_success": "El jugador {player} adivin√≥ los palos {suits} correctamente y recibe cartas de {target_player}.",
        "guess_suits_fail": "El jugador {player} nombr√≥ palos {suits} pero adivin√≥ incorrectamente y toma una carta del mazo.",
        "draw_card": "El jugador {player} toma una carta del mazo.",
        "empty_hand_draw": "El jugador {player} tiene la mano vac√≠a. Autom√°ticamente tom√≥ una carta del mazo.",
        "empty_hand_after_set": "El jugador {player} tiene la mano vac√≠a despu√©s de recolectar un set. Autom√°ticamente toma otra carta.",
        "set_collected": "¬°El jugador {player} recolect√≥ un set de {rank}!",
        "set_collected_initial": "¬°El jugador {player} recolect√≥ un set durante el reparto!",
        "next_turn": "El turno pasa al jugador {player}.",
        "continue_turn": "El jugador {player} contin√∫a su turno.",
        "room_full": "La sala est√° llena.",
        "player_exists": "Ya existe un jugador con este nombre en la sala.",
        "game_already_started": "El juego ya ha comenzado.",
        "not_enough_players": "No hay suficientes jugadores.",
        "game_over_win": "¬°Juego terminado! Ganador: {winner}.",
        "game_over_tie": "¬°Juego terminado! ¬°Empate entre ganadores! La mayor√≠a de cajas recolectadas por: {winners}.",
        "game_over_full_tie": "¬°Juego terminado! ¬°Empate completo! Todos los jugadores recolectaron {score} cajas cada uno."
    }
};

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ª–æ–∫–∞–ª—ñ–∑–∞—Ü—ñ—ó —Ç–µ–∫—Å—Ç—É
function translateText(key, params = {}) {
    const lang = document.getElementById('langSelect').value;
    let text = translations[lang]?.[key] || translations['uk'][key] || key;
    
    // –ó–∞–º—ñ–Ω–∞ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ñ–≤
    for (const [paramKey, paramValue] of Object.entries(params)) {
        text = text.replace(`{${paramKey}}`, paramValue);
    }
    
    return text;
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—Å—å–æ–≥–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
function updateAllText() {
    try {
        // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—Å—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –∑ –∞—Ç—Ä–∏–±—É—Ç–æ–º data-i18n
        document.querySelectorAll('[data-i18n]').forEach(element => {
            const key = element.getAttribute('data-i18n');
            if (key) {
                if (key === 'your_turn_prompt') {
                    const currentPlayerName = document.getElementById('current-player-name');
                    const playerName = currentPlayerName?.textContent || myName || translateText('default_player');
                    element.textContent = translateText(key, { playerName: playerName });
                    
                } else if (key === 'response_prompt') {
                    const askingPlayerName = document.getElementById('asking-player-name');
                    const askedCardRank = document.getElementById('asked-card-rank');
                    const askingPlayer = askingPlayerName?.textContent || '';
                    const cardRank = askedCardRank?.textContent || '';
                    
                    // –û–Ω–æ–≤–ª—é—î–º–æ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —î –¥–∞–Ω—ñ
                    if (askingPlayer || cardRank) {
                        element.textContent = translateText(key, {
                            askingPlayer: askingPlayer,
                            cardRank: cardRank
                        });
                    }
                    
                } else {
                    element.textContent = translateText(key);
                }
            }
        });
        
        // –û–Ω–æ–≤–ª–µ–Ω–Ω—è placeholder'—ñ–≤
        document.querySelectorAll('[data-i18n-placeholder]').forEach(element => {
            const key = element.getAttribute('data-i18n-placeholder');
            if (key && element.placeholder !== undefined) {
                element.placeholder = translateText(key);
            }
        });
        
    } catch (error) {
        console.warn('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ —Ç–µ–∫—Å—Ç—É:', error);
    }
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
document.addEventListener('DOMContentLoaded', function() {
    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –¥–ª—è –∑–º—ñ–Ω–∏ –º–æ–≤–∏
    document.getElementById('langSelect').addEventListener('change', updateAllText);
    
    // –ü–µ—Ä–≤–∏–Ω–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Ç–µ–∫—Å—Ç—É
    updateAllText();
});
